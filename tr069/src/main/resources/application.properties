server.port=8085
server.servlet.session.cookie.http-only=true
server.servlet.session.timeout=2m
server.jetty.max-http-post-size=5000000

# --- Main Database ---
main.datasource.jdbcUrl=jdbc:mysql://localhost:3306/acs?autoReconnect=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&verifyServerCertificate=false&useSSL=false&requireSSL=false
main.datasource.driverClassName=com.mysql.jdbc.Driver
main.datasource.username=acs
main.datasource.password=acs
main.datasource.minimum-idle=2
main.datasource.maximum-pool-size=10
main.datasource.poolName=mainPool

# *** Fusion TR-069 Server Configuration file ***

# --- Context Path (to avoid redirects we are using our property) ---
context-path=/tr069

# --- Syslog client ---
syslog.server.host = localhost

# --- Public url (used for download f. ex.) ---
public.url = http://localhost

# --- Various controls ---

# Allowed values are "none", "basic" and "digest". Digest authentication
# is default, and it is the most secure way to communicate with the devices.
# Combining this with SSL-setup, will give you a very secure provisioning.
auth.method = none

# Will require username/password to download a Firmware/Config file/etc
# using the TR-069 Download method. FreeACS will instruct the CPE to use
# the ACS-username/password in the HTTP basic/digest challenge. Default
# is false, since this is a change introduced in version 3.1.0. It will become
# default within a few releases.
file.auth.used = false

# Discovery Mode can be set to true if you want to automatically add a new
# unittype and unit. This mode is violating the security of the system,
# because it allows unknown units to connect and then changes will be performed
# in the database. So use this option with caution, preferably when you want to
# add a new unittype to the system. Default is false.
discovery.mode = true

# Commaseparated black-list (if discovery.mode is true) - units with
# ACS-username containing these strings will be blocked.
# discovery.block = ddd, ddsd, sdd

# concurrent download limit will limit the number of concurrent downloads
# allowed from this provisioning server. This is done to conserve bandwidth.
# This will override jobs/servicewindows if necessary, thus postponing the
# download to later. Default is 1000000 (virtually no limit).
concurrent.download.limit = 1000000

# --- Quirks ---
#
# unitdiscovery (perform full unit discovery for every unit)
#
# If the supported parameters for a certain unittype changes a lot, it will
# make sense to discover the capabilities of every unit every time. Instead of
# doing an elaborate and complex discovery of the unit, we simply ask for all
# parameter values upon every TR-069 session initiated. This is costly for the
# device, and some device may not handle this very well.
#
# parameterkey (do not return parameterkey)
#
# TR-069 specifies a parameter key which the ACS could set to the CPE and
# retrieve if and only if a change (SetParameterValue) was executed
# successfully. This is important to verify that a change was ok. However some
# devices do not return this parameter key as they should, hence som of
# the verification of a change is compromised.
#
# termination
#
# The termination quirk will requires the session to terminate using
# Empty(ACS) - Empty(CPE) - Empty(acs) as the final methods. This is according
# to the original specification of TR-069. From amendment 1 it was decided
# that a final Empty(ACS) was enough, and this is the default behavior.
#
# prettyprint
#
# The device may not format the XML requests nicely. This quirk will make
# sure the conversation log will be easier to read. The formatting will
# be done even if the XML contains illegal characters. The reason to avoid
# this quirk is performance and perhaps unnecessary.
#
# xmlcharfilter
#
# Some times the device will output XML which contains invalid XML characters.
# This quirk filters such characters before XML parser receives the stream.
# The reason to avoid this quirk is performance and perhaps unnecessary.
#
# ignorevendorconfigfile
#
# Establish which "vendor config files" (could be any kind of file really,
# but TR-069 terminology is "config") are installed on the device
# and furthermore, whether a new "vendor config file" should be uploaded to
# the device. To support this, the firmware MUST be able to answer a request
# for "InternetGatewayDevice.DeviceInfo.VendorConfigFile." object in a
# GetParameterValue request. In case no vendor config file exists, the
# device MUST NOT return an error, simply return a list of 0 parameters.
# This behavior is really standard TR-069 (since many years back), but
# asking for an object is still something that some units may have trouble
# with, hence the possibility to turn off this feature.
#
# nextlevel0ingpn
#
# Some devices doesn't support the usage of <NextLevel>false</NextLevel>
# in the GetParameterNames-request. Instead they may support
# <NextLevel>0</NextLevel>.
#
# Specify quirks like this:
#
# quirks.<unittypename>[@<version>] = <quirkname>(,<quirkname>)*
# spaces in unittypename is escaped with backslash:
# like: quirks.Some\ Space = parameterkey
#
# If you specify quirks for a version, then quirks specified for the unittype
# only is ignored all together (for that particular version of course). This
# way you can make default quirks for a unittype, and then only specify a few
# versions that have different quirks. Examples:
quirks.SpeedTouch\u0020780 = parameterkey
quirks.SpeedTouch\u0020780.6.2.29.2 = parameterkey,termination
quirks.SlowTouch\u0020780.6.2.29.2 = parameterkey,termination
quirks.P-2602HW-F3 = parameterkey
quirks.HydrogenHA = xmlcharfilter,prettyprint,unitdiscovery
quirks.freecwmp = prettyrprint,xmlcharfilter

# --- DIGEST Secret ----
digest.secret = 1234567890abcdefg


# --- UNIT Type Config ----
#
# Sometimes devices have different hardware revision to the same product name
# In some cases, TR069 tree was changed with hw revision.
# If discovery.mode is enabled, you can enable this function,
# to append discovered UnitTypeName with hardware version.
# This can be helpful to provide different UnitTypes between hardware revisions
unit.type.append-hw-version = false


report.monitor.url=http://127.0.0.1:8085/report

spring.datasource.url=jdbc:mysql://localhost:3306/acs?characterEncoding=utf8
spring.datasource.username=acs
spring.datasource.password=acs
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-active=100
spring.datasource.test-on-borrow=true
spring.datasource.test-while-idle=true
spring.datasource.initial-size=5
spring.datasource.min-idle=10
spring.datasource.validation-interval=60000
spring.datasource.validation-query=select 1 from dual
spring.datasource.validation-query-timeout=10
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.jpa.database=mysql
spring.jpa.open-in-view=false
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = true


# The STUN server needs 2 network interface to work

# 3478 is the default Stun server port
primary.port = 3478
secondary.port = 3479

# Primary ip. Specify the default public interface of your server
primary.ip = 192.168.1.102

# A secondary interface is not necessary to run TR-111 operations (it
# uses only parts of the STUN specification). If you want to run this
# server as a regular STUN server then you should also add a secondary
# interface. If no ip is specified, 127.0.0.1 will be used anyway.
secondary.ip = 127.0.0.1

#stun.enable = true